
-- Services
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
-- working
-- GUI
local GUI = Instance.new("ScreenGui")
GUI.Parent = player:WaitForChild("PlayerGui")
GUI.ResetOnSpawn = false

-- Frame
local Frame = Instance.new("Frame", GUI)
Frame.Position = UDim2.new(0, 0, 0, 0)
Frame.Size = UDim2.new(0.3, 0, 0.3, 0)
Frame.Visible = true
Frame.Active = true
Frame.Draggable = true
Frame.BorderSizePixel = 3

-- Title
local Title = Instance.new("TextLabel", Frame)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.BackgroundTransparency = 0
Title.BackgroundColor3 = Color3.new(0.498039, 0.498039, 0.498039)
Title.Size = UDim2.new(1, 0, 0.2, 0)
Title.Text = "UnderMade Menu"
Title.BorderSizePixel = 3
Title.TextScaled = true
Title.TextColor3 = BrickColor.new("Ghost grey").Color

-- Corners & strokes
Instance.new("UICorner", Frame)
local EdgeStroke = Instance.new("UIStroke", Frame)
EdgeStroke.Thickness = 3

Instance.new("UICorner", Title)
local SubEdgeStroke = Instance.new("UIStroke", Title)
SubEdgeStroke.Thickness = 3
SubEdgeStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

-- Button creation
local function createButton(parent, pos, size, text, textColor)
	local btn = Instance.new("TextButton", parent)
	btn.Position = pos
	btn.Size = size
	btn.BackgroundColor3 = BrickColor.new("Black").Color
	btn.Text = text
	btn.TextColor3 = BrickColor.new(textColor).Color
	btn.TextScaled = true
	btn.AutoButtonColor = true
	Instance.new("UICorner", btn)
	local stroke = Instance.new("UIStroke", btn)
	stroke.Thickness = 3
	stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	return btn
end

-- Buttons
local Button = createButton(Frame, UDim2.new(0.03, 0, 0.3, 0), UDim2.new(0.4, 0, 0.2, 0), "Walkspeed = 100", "White")
Button.MouseButton1Click:Connect(function()
	local char = player.Character or player.CharacterAdded:Wait()
	local humanoid = char:FindFirstChild("Humanoid")
	if humanoid then
		humanoid.WalkSpeed = 100
	end
end)

local Button2 = createButton(Frame, UDim2.new(0.5, 0, 0.3, 0), UDim2.new(0.4, 0, 0.2, 0), "super Jump", "Ghost grey")
Button2.MouseButton1Click:Connect(function()
	local teleportActive = false
	teleportActive = not teleportActive
	Button2.Text = teleportActive and "Turn Off" or "Turn On"

	local player = game.Players.LocalPlayer
	local UIS = game:GetService("UserInputService")
	local char = player.Character or player.CharacterAdded:Wait()
	local hrp = char:WaitForChild("HumanoidRootPart")
	local mouse = player:GetMouse()

	if teleportActive then
		UIS.InputBegan:Connect(function(input, gameProcessed)
			if teleportActive and not gameProcessed then
				-- Only trigger teleport if it's a screen tap (Touch or Mouse) and not from movement or jump
				if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
					-- Prevent teleport if user is pressing the jump button
					local humanoid = char:FindFirstChildOfClass("Humanoid")
					if humanoid and humanoid:GetState() == Enum.HumanoidStateType.Jumping then
						return -- Don't teleport if jumping
					end

					local targetPosition
					if input.UserInputType == Enum.UserInputType.Touch then
						local touchPosition = input.Position
						local camera = workspace.CurrentCamera
						local ray = camera:ScreenPointToRay(touchPosition.X, touchPosition.Y)
						local raycastParams = RaycastParams.new()
						raycastParams.FilterDescendantsInstances = {char}
						raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
						local result = workspace:Raycast(ray.Origin, ray.Direction * 500, raycastParams)

						if result then
							targetPosition = result.Position
						end
					else
						targetPosition = mouse.Hit and mouse.Hit.p or nil
					end

					if targetPosition then
						hrp.CFrame = CFrame.new(targetPosition + Vector3.new(0, 3, 0))
					end
				end
			end
		end)
	end

end)

local Button3 = createButton(Frame, UDim2.new(0.03, 0, 0.6, 0), UDim2.new(0.4, 0, 0.2, 0), "Teleport Menu", "Ghost grey")
Button3.MouseButton1Click:Connect(function()
	local teleportFrame = Instance.new("ScrollingFrame")
	teleportFrame.Size = UDim2.new(0.5, 0, 0.5, 0)
	teleportFrame.Position = UDim2.new(0.03, 0, 1.1, 0)
	local tpUIedge = Instance.new("UIStroke", teleportFrame)
	tpUIedge.Thickness = 3
	tpUIedge.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	teleportFrame.Parent = Frame
	teleportFrame.Active = true
	teleportFrame.Draggable = true

	local function updateTeleportMenu()
		teleportFrame:ClearAllChildren()
		local players = game:GetService("Players"):GetPlayers()
		for i, targetPlayer in players do
			local teleportButton = Instance.new("TextButton")
			teleportButton.Size = UDim2.new(1, 0, 0.1, 0)
			teleportButton.Position = UDim2.new(0, 0, i * 0.1, 0)
			teleportButton.Text = targetPlayer.Name
			teleportButton.Parent = teleportFrame

			teleportButton.MouseButton1Click:Connect(function()
				local char = player.Character or player.CharacterAdded:Wait()
				local targetChar = targetPlayer.Character
				if targetChar then
					local targetHRP = targetChar:FindFirstChild("HumanoidRootPart")
					if targetHRP then
						char:PivotTo(targetHRP.CFrame)
					end
				end
			end)
		end
		teleportFrame.CanvasSize = UDim2.new(0, 0, #players * 0.1, 0)
	end

	updateTeleportMenu()
	Players.PlayerAdded:Connect(updateTeleportMenu)
	Players.PlayerRemoving:Connect(updateTeleportMenu)
end)

-- Noclip
local Button4 = createButton(Frame, UDim2.new(0.5, 0, 0.6, 0), UDim2.new(0.4, 0, 0.2, 0), "Noclip", "Ghost grey")
Button4.MouseButton1Click:Connect(function()
	local char = player.Character or player.CharacterAdded:Wait()
	local hrp = char:WaitForChild("HumanoidRootPart")
	local parts = {}

	RunService.RenderStepped:Connect(function()
		if not char or not hrp then return end
		for part, orig in pairs(parts) do
			if part:IsA("BasePart") then
				part.CanCollide = orig
			end
		end
		parts = {}
		for _, part in pairs(workspace:GetPartBoundsInBox(hrp.CFrame, hrp.Size + Vector3.new(2, 2, 2))) do
			if part:IsA("BasePart") and not part:IsDescendantOf(char) and part.CanCollide then
				parts[part] = part.CanCollide
				part.CanCollide = false
			end
		end
	end)
end)

-- Fly logic (replaces previous FlyButton connection and flyLoop)

local FlyButton = createButton(Frame, UDim2.new(0.15, 0, 0.85, 0), UDim2.new(0.6, 0, 0.1, 0), "Fly", "White")

local flying = false
local moveDir = Vector3.zero
local control = {F = 0, B = 0, L = 0, R = 0, U = 0, D = 0}
local speed = 50

local function updateMoveDirection()
	moveDir = Vector3.new(
		control.R - control.L,
		control.U - control.D,
		control.B - control.F
	)
end

local function flyOnPC()
	UserInputService.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.Keyboard then
			if input.KeyCode == Enum.KeyCode.W then control.F = 1 end
			if input.KeyCode == Enum.KeyCode.S then control.B = 1 end
			if input.KeyCode == Enum.KeyCode.A then control.L = 1 end
			if input.KeyCode == Enum.KeyCode.D then control.R = 1 end
			if input.KeyCode == Enum.KeyCode.Space then control.U = 1 end
			if input.KeyCode == Enum.KeyCode.LeftControl then control.D = 1 end
		end
	end)

	UserInputService.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.Keyboard then
			if input.KeyCode == Enum.KeyCode.W then control.F = 0 end
			if input.KeyCode == Enum.KeyCode.S then control.B = 0 end
			if input.KeyCode == Enum.KeyCode.A then control.L = 0 end
			if input.KeyCode == Enum.KeyCode.D then control.R = 0 end
			if input.KeyCode == Enum.KeyCode.Space then control.U = 0 end
			if input.KeyCode == Enum.KeyCode.LeftControl then control.D = 0 end
		end
	end)
end

local function flyOnMobile()
	local directions = {
		{"F", UDim2.new(0.82, 0, 0.2, 0)},
		{"B", UDim2.new(0.82, 0, 0.55, 0)},
		{"L", UDim2.new(0.74, 0, 0.48, 0)},
		{"R", UDim2.new(0.9, 0, 0.48, 0)},
		{"U", UDim2.new(0.82, 0, 0.3, 0)},
		{"D", UDim2.new(0.82, 0, 0.7, 0)},
	}

	for _, dir in directions do
		local key, pos = dir[1], dir[2]
		local b = Instance.new("TextButton", Frame)
		b.Size = UDim2.new(0.1, 0, 0.08, 0)
		b.Position = pos
		b.Text = key
		b.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		b.TextColor3 = Color3.new(1, 1, 1)
		Instance.new("UICorner", b)

		b.MouseButton1Down:Connect(function()
			control[key] = 1
		end)
		b.MouseButton1Up:Connect(function()
			control[key] = 0
		end)
	end
end

FlyButton.MouseButton1Click:Connect(function()
	character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:WaitForChild("HumanoidRootPart")

	if not flying then
		flying = true
		local bv = Instance.new("BodyVelocity")
		bv.Velocity = Vector3.zero
		bv.MaxForce = Vector3.new(1e5, 1e5, 1e5)
		bv.P = 1250
		bv.Name = "FlyVelocity"
		bv.Parent = hrp

		RunService.RenderStepped:Connect(function()
			if flying and bv and hrp then
				updateMoveDirection()
				local camCF = workspace.CurrentCamera.CFrame
				local dir = (camCF:VectorToWorldSpace(moveDir)).Unit
				if dir.Magnitude > 0 then
					bv.Velocity = dir * speed
				else
					bv.Velocity = Vector3.zero
				end
			end
		end)

		if UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled then
			flyOnMobile()
		else
			flyOnPC()
		end
	else
		flying = false
		if hrp:FindFirstChild("FlyVelocity") then
			hrp.FlyVelocity:Destroy()
		end
	end
end)
